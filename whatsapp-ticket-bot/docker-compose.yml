# ================================================
# DOCKER COMPOSE - AMBIENTE COMPLETO
# WhatsApp Bot + PostgreSQL + Redis + Nginx
# ================================================

version: '3.8'

services:
  # =====================================================
  # POSTGRESQL DATABASE
  # =====================================================
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: whatsapp_campaigns
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secretpassword}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema-postgresql.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/setup-continuity-tables.sql:/docker-entrypoint-initdb.d/02-continuity.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =====================================================
  # REDIS CACHE
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: whatsapp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-redispass}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =====================================================
  # WHATSAPP BOT APPLICATION
  # =====================================================
  whatsapp-bot:
    build: .
    container_name: whatsapp-bot-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-secretpassword}
      DB_NAME: whatsapp_campaigns
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispass}
      PORT: 3006
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      BOT_NAME: ${BOT_NAME:-Unica Events}
      COMPANY_WEBSITE: ${COMPANY_WEBSITE:-https://unicaevents.com}
      COMPANY_PHONE: ${COMPANY_PHONE:-5567999959601}
    ports:
      - "3006:3006"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./tokens:/app/tokens
      - ./public:/app/public
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =====================================================
  # NGINX REVERSE PROXY
  # =====================================================
  nginx:
    image: nginx:alpine
    container_name: whatsapp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - whatsapp-bot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =====================================================
  # MONITORING - PROMETHEUS (OPCIONAL)
  # =====================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: whatsapp-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring

  # =====================================================
  # MONITORING - GRAFANA (OPCIONAL)
  # =====================================================
  grafana:
    image: grafana/grafana:latest
    container_name: whatsapp-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    profiles:
      - monitoring

# =====================================================
# VOLUMES PERSISTENTES
# =====================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# =====================================================
# NETWORK CONFIGURATION
# =====================================================
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
